/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole;

/**
 *
 * @author zhaojinkun
 */
public class CourseRegistrationPanel extends javax.swing.JPanel {

    /**
     * Creates new form CourseRegistrationPanel
     */
    public CourseRegistrationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbCourse = new javax.swing.JTable();
        btnSearchId = new javax.swing.JButton();
        btnSearchCourseName = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnEnroll = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fieldCouseName = new javax.swing.JTextField();
        fieldCourseID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        fieldInstrucor = new javax.swing.JTextField();
        btnSearchInstructor = new javax.swing.JButton();

        tbCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Instructor", "Credit"
            }
        ));
        jScrollPane2.setViewportView(tbCourse);

        btnSearchId.setText("Search Course ID");
        btnSearchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIdActionPerformed(evt);
            }
        });

        btnSearchCourseName.setText("Search Course Name");
        btnSearchCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCourseNameActionPerformed(evt);
            }
        });

        jLabel5.setText("Course Offer List & Search Results    ");

        btnEnroll.setText("Enroll");
        btnEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollActionPerformed(evt);
            }
        });

        btnDrop.setText("Drop");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });

        jLabel4.setText("Search by Course ID:");

        jLabel7.setText("Search by Course Name:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Course Registration");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel8.setText("Search by Instructor:");

        btnSearchInstructor.setText("Search Instructor");
        btnSearchInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchInstructorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 858, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldCourseID, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(fieldCouseName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearchId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchCourseName))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(fieldInstrucor, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fieldCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchId)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(fieldCouseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchCourseName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(fieldInstrucor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchInstructor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnroll)
                    .addComponent(btnDrop))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIdActionPerformed
        // TODO add your handling code here:
//        if (!fieldCourseID.getText().isBlank()) {
//            String customerID = fieldCourseID.getText();
//            Customer foundCustomer = orderDirectory.searchCustomerByID(customerID);
//            if (foundCustomer != null) {
//                DefaultTableModel customerModel = (DefaultTableModel) tbCourse.getModel();
//                customerModel.setRowCount(0);
//
//                Object[] customerRow = new Object[]{
//                    foundCustomer,
//                    foundCustomer.getFirstName(),
//                    foundCustomer.getLastName(),
//                    foundCustomer.getContact()
//                };
//                customerModel.addRow(customerRow);
//
//                // Refresh and add tbOrders
//                ArrayList<Customer> customerList = new ArrayList<Customer>();
//                customerList.add(foundCustomer);
//                ArrayList<Order> orderList = orderDirectory.searchOrderByCustomer(customerList);
//                DefaultTableModel orderModel = (DefaultTableModel) tbOrders.getModel();
//                orderModel.setRowCount(0);
//                for (Order o : orderList) {
//                    Product p = o.getProduct();
//                    int number = o.getNumber();
//                    double price = p.getPrice();
//                    double total = number * price;
//                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//
//                    Object[] orderRow = new Object []{
//                        o,
//                        o.getOrderDateTime().format(formatter),
//                        o.getOrderStatus(),
//                        String.valueOf(number),
//                        String.valueOf(total),
//                    };
//                    orderModel.addRow(orderRow);
//                }
//            }
//            else{
//                JOptionPane.showMessageDialog(null, "Customer not found. Please check the customer ID and try again.","Warning",JOptionPane.WARNING_MESSAGE);
//            }
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "please type the customer ID to view", "Warning", JOptionPane.WARNING_MESSAGE);
//        }

    }//GEN-LAST:event_btnSearchIdActionPerformed

    private void btnSearchCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCourseNameActionPerformed
        // TODO add your handling code here:
//        if (!fieldCouseName.getText().isBlank()) {
//            String customerName = fieldCouseName.getText();
//            ArrayList<Customer> foundCustomerList = orderDirectory.searchCustomerByName(customerName);
//            if (!foundCustomerList.isEmpty()) {
//                DefaultTableModel customerModel = (DefaultTableModel) tbCourse.getModel();
//                customerModel.setRowCount(0);
//                for (Customer foundCustomer : foundCustomerList) {
//                    Object[] customerRow = new Object[]{
//                        foundCustomer,
//                        foundCustomer.getFirstName(),
//                        foundCustomer.getLastName(),
//                        foundCustomer.getContact()
//                    };
//                    customerModel.addRow(customerRow);
//                }
//                // Refresh and add tbOrders
//
//                ArrayList<Order> orderList = orderDirectory.searchOrderByCustomer(foundCustomerList);
//                DefaultTableModel orderModel = (DefaultTableModel) tbOrders.getModel();
//                orderModel.setRowCount(0);
//                for (Order o : orderList) {
//                    Product p = o.getProduct();
//                    int number = o.getNumber();
//                    double price = p.getPrice();
//                    double total = number * price;
//                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//
//                    Object[] orderRow = new Object []{
//                        o,
//                        o.getOrderDateTime().format(formatter),
//                        o.getOrderStatus(),
//                        String.valueOf(number),
//                        String.valueOf(total),
//                    };
//                    orderModel.addRow(orderRow);
//                }
//            }
//            else{
//                JOptionPane.showMessageDialog(null, "Customer not found. Please check the customer Name and try again.","Warning",JOptionPane.WARNING_MESSAGE);
//            }
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "please type the customer Name to view", "Warning", JOptionPane.WARNING_MESSAGE);
//        }
    }//GEN-LAST:event_btnSearchCourseNameActionPerformed

    private void btnEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollActionPerformed
        // TODO add your handling code here:
//        int selectedRow = tbCourse.getSelectedRow();
//        if (selectedRow >= 0) {
//            Customer selectedCustomer = (Customer) tbCourse.getValueAt(selectedRow, 0);
//            ViewCustomerDetailJPanel panel = new ViewCustomerDetailJPanel(workJPanel, selectedCustomer);
//            workJPanel.add("ViewCustomerDetailJPanel", panel);
//            CardLayout layout = (CardLayout) workJPanel.getLayout();
//            layout.next(workJPanel);
//
//            // We want to open ViewJPanel here for the selected account
//        } else {
//            JOptionPane.showMessageDialog(null, "Please select a order from the list to view.", "Warning", JOptionPane.WARNING_MESSAGE);
//        }

    }//GEN-LAST:event_btnEnrollActionPerformed

    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        // TODO add your handling code here:
//        int selectedRow = tbCourse.getSelectedRow();
//        if (selectedRow >= 0) {
//            int dialogButton = JOptionPane.YES_NO_OPTION;
//            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected customer?", "Warning", dialogButton);
//            if (dialogResult == JOptionPane.YES_OPTION) {
//                Customer selectedCustomer = (Customer) tbCourse.getValueAt(selectedRow, 0);
//                orderDirectory.deleteCustomer(selectedCustomer);
//                clearSearchTables();
//            }
//            // We want to open ViewJPanel here for the selected account
//        } else {
//            JOptionPane.showMessageDialog(null, "Please select an customer from the list to view.", "Warning", JOptionPane.WARNING_MESSAGE);
//        }

    }//GEN-LAST:event_btnDropActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchInstructorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchInstructorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnEnroll;
    private javax.swing.JButton btnSearchCourseName;
    private javax.swing.JButton btnSearchId;
    private javax.swing.JButton btnSearchInstructor;
    private javax.swing.JTextField fieldCourseID;
    private javax.swing.JTextField fieldCouseName;
    private javax.swing.JTextField fieldInstrucor;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbCourse;
    // End of variables declaration//GEN-END:variables
}

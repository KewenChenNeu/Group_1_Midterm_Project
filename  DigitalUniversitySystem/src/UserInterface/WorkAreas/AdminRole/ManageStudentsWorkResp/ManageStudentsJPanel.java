/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.ManageStudentsWorkResp;

import info5100.university.example.Department.Department;
import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.StudentDirectory;
import info5100.university.example.Persona.StudentProfile;
import java.awt.CardLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.List;  
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author noora.
 */
public class ManageStudentsJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Department department;
    StudentProfile selectedStudent;

    /**
     * Creates new form ManageStudentJPanel
     */
    public ManageStudentsJPanel(Department dept, JPanel cardPanel) {
        this.department = dept;
        this.CardSequencePanel = cardPanel;
        initComponents();

        tblStudents.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int row = tblStudents.getSelectedRow();
                if (row < 0) {
                    selectedStudent = null;
                    return;
                }
                Object obj = tblStudents.getValueAt(row, 0);
                if (obj instanceof StudentProfile) {
                    selectedStudent = (StudentProfile) obj;
                } else {
                    selectedStudent = null;
                }
            }
        });

        tblStudents.getColumnModel().getColumn(0).setMinWidth(0);
        tblStudents.getColumnModel().getColumn(0).setMaxWidth(0);
        tblStudents.getColumnModel().getColumn(0).setWidth(0);

        refreshTable(department.getStudentDirectory().getStudentList());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnSearchbyName = new javax.swing.JButton();
        btnSearchbyDept = new javax.swing.JButton();
        btnSearchbyID = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        txtFieldID = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblDept = new javax.swing.JLabel();
        txtFieldName = new javax.swing.JTextField();
        txtFieldDept = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(null);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack);
        btnBack.setBounds(20, 500, 80, 23);

        lblTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblTitle.setText("Manage Students");
        jPanel1.add(lblTitle);
        lblTitle.setBounds(21, 20, 550, 28);

        btnSearchbyName.setText("Search by Name");
        btnSearchbyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyNameActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchbyName);
        btnSearchbyName.setBounds(60, 70, 150, 23);

        btnSearchbyDept.setText("Search by Dept");
        btnSearchbyDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyDeptActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchbyDept);
        btnSearchbyDept.setBounds(240, 70, 130, 23);

        btnSearchbyID.setText("Search by ID");
        btnSearchbyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyIDActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchbyID);
        btnSearchbyID.setBounds(400, 70, 120, 23);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);
        btnDelete.setBounds(300, 460, 78, 23);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit);
        btnEdit.setBounds(170, 460, 78, 23);

        lblID.setText("ID");
        jPanel1.add(lblID);
        lblID.setBounds(140, 120, 12, 17);
        jPanel1.add(txtFieldID);
        txtFieldID.setBounds(180, 120, 110, 23);

        lblName.setText("Name");
        jPanel1.add(lblName);
        lblName.setBounds(130, 160, 34, 17);

        lblDept.setText("Dept");
        jPanel1.add(lblDept);
        lblDept.setBounds(130, 200, 28, 17);
        jPanel1.add(txtFieldName);
        txtFieldName.setBounds(180, 160, 110, 23);
        jPanel1.add(txtFieldDept);
        txtFieldDept.setBounds(180, 200, 110, 23);

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Object", "ID", "Name", "Department", "Status", "Email", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudents);
        if (tblStudents.getColumnModel().getColumnCount() > 0) {
            tblStudents.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(22, 250, 570, 180);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 638, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchbyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyIDActionPerformed
        // TODO add your handling code here:
        String id = txtFieldID.getText().trim();
        StudentDirectory sd = department.getStudentDirectory();

        List<StudentProfile> results;
        if (id.isEmpty()) {
            results = sd.getStudentList();
        } else {
            results = sd.searchById(id);
        }

        refreshTable(results);
        selectedStudent = null;
    }//GEN-LAST:event_btnSearchbyIDActionPerformed

    private void btnSearchbyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyNameActionPerformed
        // TODO add your handling code here:
        String name = txtFieldName.getText().trim();
        StudentDirectory sd = department.getStudentDirectory();

        List<StudentProfile> results;
        if (name.isEmpty()) {
            results = sd.getStudentList();
        } else {
            results = sd.searchByName(name);
        }

        refreshTable(results);
        selectedStudent = null;
    }//GEN-LAST:event_btnSearchbyNameActionPerformed

    private void btnSearchbyDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyDeptActionPerformed
        // TODO add your handling code here:
        String dep = txtFieldDept.getText().trim();
        StudentDirectory sd = department.getStudentDirectory();

        List<StudentProfile> results;
        if (dep.isEmpty()) {
            results = sd.getStudentList();
        } else {
            results = sd.searchByDepartment(dep);
        }

        refreshTable(results);
        selectedStudent = null;
    }//GEN-LAST:event_btnSearchbyDeptActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (selectedStudent == null) {
            JOptionPane.showMessageDialog(this, "Select a student first.");
            return;
        }

        String personId = selectedStudent.getPersonId();
        if (personId == null) {
            JOptionPane.showMessageDialog(this, "Missing student ID.");
            return;
        }

        String newDept = JOptionPane.showInputDialog(this,
                "New Department:",
                selectedStudent.getDepartment());
        if (newDept == null) {
            return;
        }
        String newStatus = JOptionPane.showInputDialog(this,
                "New Academic Status:",
                selectedStudent.getAcademicStatus());
        if (newStatus == null) {
            return;
        }
        Person p = selectedStudent.getPerson();
        String newEmail = JOptionPane.showInputDialog(this,
                "New Email:",
                (p != null ? p.getEmail() : ""));
        if (newEmail == null) {
            return;
        }

        String newPhone = JOptionPane.showInputDialog(this,
                "New Phone:",
                (p != null ? p.getPhone() : ""));
        if (newPhone == null) {
            return;
        }

        StudentDirectory sd = department.getStudentDirectory();

        boolean okDept = sd.updateStudentDepartment(personId, newDept.trim());
        boolean okStatus = sd.updateStudentAcademicStatus(personId, newStatus.trim());
        boolean okContact = sd.updateStudentContact(personId, newEmail.trim(), newPhone.trim());

        if (!okDept || !okStatus || !okContact) {
            JOptionPane.showMessageDialog(this, "Update failed. (Possible duplicate email?)");
            return;
        }

        JOptionPane.showMessageDialog(this, "Student updated.");
        refreshTable(sd.getStudentList());
        selectedStudent = null;

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (selectedStudent == null) {
            JOptionPane.showMessageDialog(this, "Select a student first.");
            return;
        }

        String personId = selectedStudent.getPersonId();
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Delete this student (" + personId + ")?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION
        );
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        StudentDirectory sd = department.getStudentDirectory();
        boolean ok = sd.removeStudent(personId);

        if (!ok) {
            JOptionPane.showMessageDialog(this, "Delete failed.");
            return;
        }

        JOptionPane.showMessageDialog(this, "Student deleted.");
        refreshTable(sd.getStudentList());
        selectedStudent = null;

    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearchbyDept;
    private javax.swing.JButton btnSearchbyID;
    private javax.swing.JButton btnSearchbyName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDept;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtFieldDept;
    private javax.swing.JTextField txtFieldID;
    private javax.swing.JTextField txtFieldName;
    // End of variables declaration//GEN-END:variables

    private void refreshTable(List<StudentProfile> studentList) {
        DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
        model.setRowCount(0);

        if (studentList == null) {
            return;
        }
        for (StudentProfile sp : studentList) {
            Person p = sp.getPerson();
            String pid = (p != null ? p.getPersonId() : "");
            String name = sp.getStudentName();
            String dept = sp.getDepartment();
            String status = sp.getAcademicStatus();
            String email = (p != null ? p.getEmail() : "");
            String phone = (p != null ? p.getPhone() : "");

            Object[] row = new Object[]{
                sp,
                pid,
                name,
                dept,
                status,
                email,
                phone
            };
            model.addRow(row);

        }
    }
}

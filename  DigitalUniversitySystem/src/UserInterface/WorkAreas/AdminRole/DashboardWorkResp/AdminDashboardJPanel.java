/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.DashboardWorkResp;

import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.CourseSchedule.CourseSchedule;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.UserAccountDirectory;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author noora.
 */
public class AdminDashboardJPanel extends javax.swing.JPanel {

    JPanel cardPanel;
    Department department;

    /**
     * Creates new form AdminDashboardJPanel
     */
    public AdminDashboardJPanel(Department dept, JPanel cardPanel) {
        this.department = dept;
        this.cardPanel = cardPanel;
        initComponents();

        populateSemesterDropdown();
        loadActiveUsersTable();
        loadCoursesOfferedTable();
        loadTuitionRevenueTable();
        loadCourseEnrollmentTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblActiveUsers = new javax.swing.JLabel();
        lblCoursesOffered = new javax.swing.JLabel();
        lblCourseEnrollment = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblActiveUsers = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCoursesOffered = new javax.swing.JTable();
        cmbSemester = new javax.swing.JComboBox<>();
        btnShowEnroll = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCourseEnrollment = new javax.swing.JTable();
        lblTuitionRevenue = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblTuitionRevenue = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 153));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblTitle.setText("Dashboard");

        lblActiveUsers.setText("Active Users");

        lblCoursesOffered.setText("Courses Offered per Semester");

        lblCourseEnrollment.setText("Enrollment per Course");

        tblActiveUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role", "Active Users"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblActiveUsers);

        jScrollPane2.setViewportView(jScrollPane1);

        tblCoursesOffered.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Semester", "# Courses Offered"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblCoursesOffered);

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnShowEnroll.setText("Show");
        btnShowEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowEnrollActionPerformed(evt);
            }
        });

        tblCourseEnrollment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Number", "Course Name", "Enrolled Students"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblCourseEnrollment);

        lblTuitionRevenue.setText("Tuition Revenue Summary");

        tblTuitionRevenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Metric", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblTuitionRevenue);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCoursesOffered)
                            .addComponent(lblActiveUsers))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                            .addComponent(lblTuitionRevenue)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCourseEnrollment)
                                .addGap(29, 29, 29)
                                .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnShowEnroll))
                            .addComponent(jScrollPane6))
                        .addGap(111, 111, 111))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(28, 28, 28)
                .addComponent(lblActiveUsers)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblCoursesOffered)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseEnrollment)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowEnroll))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(lblTuitionRevenue)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardPanel.remove(this);
        CardLayout layout = (CardLayout) cardPanel.getLayout();
        layout.previous(cardPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnShowEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowEnrollActionPerformed
        // TODO add your handling code here:
        loadCourseEnrollmentTable();
    }//GEN-LAST:event_btnShowEnrollActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnShowEnroll;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblActiveUsers;
    private javax.swing.JLabel lblCourseEnrollment;
    private javax.swing.JLabel lblCoursesOffered;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTuitionRevenue;
    private javax.swing.JTable tblActiveUsers;
    private javax.swing.JTable tblCourseEnrollment;
    private javax.swing.JTable tblCoursesOffered;
    private javax.swing.JTable tblTuitionRevenue;
    // End of variables declaration//GEN-END:variables

    private void populateSemesterDropdown() {
        cmbSemester.removeAllItems();
        for (String sem : department.getMastercoursecatalog().keySet()) {
            cmbSemester.addItem(sem);
        }

        if (cmbSemester.getItemCount() > 0) {
            cmbSemester.setSelectedIndex(0);
        }
    }

    private void loadActiveUsersTable() {
        DefaultTableModel model = (DefaultTableModel) tblActiveUsers.getModel();
        model.setRowCount(0);

        UserAccountDirectory uad = department.getUserAccountDirectory();
        if (uad == null) {
            return;
        }

        String[] roles = {"ADMIN", "FACULTY", "STUDENT", "REGISTRAR"};
        for (String role : roles) {
            int count = uad.countActiveByRole(role);
            model.addRow(new Object[]{role, count});
        }
    }

    private void loadCoursesOfferedTable() {
        DefaultTableModel model = (DefaultTableModel) tblCoursesOffered.getModel();
        model.setRowCount(0);

        for (String sem : department.getMastercoursecatalog().keySet()) {
            int numOffers = department.getCourseOfferCountForSemester(sem);
            model.addRow(new Object[]{sem, numOffers});
        }
    }

    private void loadTuitionRevenueTable() {
        DefaultTableModel model = (DefaultTableModel) tblCourseEnrollment.getModel();
        model.setRowCount(0);

        String semester = (String) cmbSemester.getSelectedItem();
        if (semester == null) {
            return;
        }

        CourseSchedule cs = department.getCourseSchedule(semester);
        if (cs == null) {
            return;
        }

        List<CourseOffer> offers = cs.getAllCourseOffers();
        for (CourseOffer co : offers) {
            String courseNum = co.getCourseNumber();
            String courseName = co.getCourseName(); 
            int enrolled = co.getEnrolledCount();

            model.addRow(new Object[]{
                courseNum,
                courseName,
                enrolled
            });
        }
    }

    private void loadCourseEnrollmentTable() {
        DefaultTableModel model = (DefaultTableModel) tblTuitionRevenue.getModel();
        model.setRowCount(0);

        double totalPaid = department.getTotalTuitionPaid();
        model.addRow(new Object[]{
            "Total Paid Tuition",
            String.format("$%.2f", totalPaid)
        });
    }
}
